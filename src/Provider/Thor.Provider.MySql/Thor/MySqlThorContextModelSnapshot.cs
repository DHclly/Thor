// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Thor.Provider;

#nullable disable

namespace Thor.Provider.MySql.Thor
{
    [DbContext(typeof(MySqlThorContext))]
    partial class MySqlThorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Thor.Service.Domain.ChatChannel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("ControlAutomatically")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Disable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Models")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Other")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Quota")
                        .HasColumnType("int");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("bigint");

                    b.Property<long?>("ResponseTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Name");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("Thor.Service.Domain.ModelManager", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal?>("AudioOutputRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("AudioPromptRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("Available")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("CompletionRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Enable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsVersion2")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<decimal>("PromptRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("QuotaMax")
                        .HasColumnType("longtext");

                    b.Property<int>("QuotaType")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Model");

                    b.ToTable("ModelManagers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("be496236-6d7e-4712-8c97-fc7051b82a49"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3060),
                            Description = "GPT-3.5 Turbo 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("c9dc0078-78d9-40d4-9ddd-eb7c557f214c"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3067),
                            Description = "GPT-3.5 Turbo 0125 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0125",
                            PromptRate = 0.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("1e468141-a1d2-4707-b6e0-8be35e6766d6"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3068),
                            Description = "GPT-3.5 Turbo 0301 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0301",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("41821418-9b1d-4c09-9542-50feb4a3254e"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3069),
                            Description = "GPT-3.5 Turbo 0613 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0613",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("23b3d340-3c34-469b-8770-5820be231dcd"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3069),
                            Description = "GPT-3.5 Turbo 1106 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-1106",
                            PromptRate = 0.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("63c6cfab-0d32-4291-96fa-545134c197e0"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3075),
                            Description = "GPT-3.5 Turbo 16k 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-16k",
                            PromptRate = 0.75m,
                            QuotaMax = "16K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("fcb1d536-7bb8-47d3-8774-580108f175cf"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3076),
                            Description = "GPT-3.5 Turbo 16k 0613 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-16k-0613",
                            PromptRate = 0.75m,
                            QuotaMax = "16K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("27fdf7e2-d13c-419d-ab07-ddfcf4b5e7e5"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3077),
                            Description = "GPT-3.5 Turbo Instruct 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-instruct",
                            PromptRate = 0.001m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("caf27f4e-381b-41b5-a6df-d0ba6ac567ab"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3078),
                            Description = "GPT-4 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("e989ece9-2c93-4f3e-b9bd-5040a210de1e"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3078),
                            Description = "GPT-4 0125 预览文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0125-preview",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("b3a99204-27b7-4ff5-a3c9-4e1515d0ce78"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3079),
                            Description = "GPT-4 0314 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0314",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("adea217b-3c8f-40c0-884d-b0e04433adda"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3080),
                            Description = "GPT-4 0613 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0613",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("0c0b1680-1625-46ce-8a31-e70a32398c23"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3080),
                            Description = "GPT-4 1106 预览文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-1106-preview",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("ff867b12-70aa-4ebc-bfdb-685e8195a48c"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3083),
                            Description = "GPT-4 1106 视觉预览模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-1106-vision-preview",
                            PromptRate = 10m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u89C6\\u89C9\",\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("9f50e39a-e0e5-4a91-923e-41033e4aa5da"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3083),
                            Description = "GPT-4 32k 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("b4b46d7c-1f25-499a-89aa-f0526dfaee73"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3084),
                            Description = "GPT-4 32k 0314 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k-0314",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("3ae20bee-0c28-40f1-8118-918797c86127"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3085),
                            Description = "GPT-4 32k 0613 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k-0613",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("516108e9-8271-4aa4-b8c1-ba60401eb54b"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3086),
                            Description = "GPT-4 全部文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-all",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u8054\\u7F51\"]"
                        },
                        new
                        {
                            Id = new Guid("326a4a3b-79e4-44bd-a293-0ecb5dede286"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3087),
                            Description = "GPT-4 Turbo 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("ba3d714f-0b08-4532-bed5-0db2f3d46222"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3087),
                            Description = "Gemini 1.5 Pro 文本模型",
                            Enable = true,
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-1.5-pro",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("e8d88669-f375-4e57-9d92-4a7d72350310"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3088),
                            Description = "Gemini Pro 文本模型",
                            Enable = true,
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-pro",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("a9a56ec8-cd1e-486f-b32b-814a745fc743"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3090),
                            Description = "Gemini Pro 视觉模型",
                            Enable = true,
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-pro-vision",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]"
                        },
                        new
                        {
                            Id = new Guid("2eb94136-a534-4092-8453-010be6ae9d2f"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3091),
                            Description = "Gemini 1.5 Flash 文本模型",
                            Enable = true,
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-1.5-flash",
                            PromptRate = 0.2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("3fd8aed6-b066-497e-95ba-eb618b3c1182"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3092),
                            Description = "GPT-4 Turbo 2024-04-09 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo-2024-04-09",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("6008568a-1a3a-467a-9f2d-8887fd8dfb4f"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3092),
                            Description = "GPT-4 Turbo 预览文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo-preview",
                            PromptRate = 5m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]"
                        },
                        new
                        {
                            Id = new Guid("b8eff6eb-4c87-404e-a843-4da5d8f1f0ad"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3093),
                            Description = "GPT-4 视觉预览模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-vision-preview",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]"
                        },
                        new
                        {
                            Id = new Guid("66bad5d5-9e2f-46eb-8c85-627fd976adc8"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3094),
                            Description = "GPT-4o 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("cdd9ba3a-9682-4e21-9754-8608a7f4c6eb"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3094),
                            Description = "ChatGPT 4o 最新文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "chatgpt-4o-latest",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("f1b2e874-d24a-48a0-8720-b7b2e1808e33"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3095),
                            Description = "GPT-4o Mini 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-mini",
                            PromptRate = 0.07m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("6b10fd74-2d5d-4e94-ad96-53f21675585a"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3097),
                            Description = "GPT-4o Mini 2024-07-18 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-mini-2024-07-18",
                            PromptRate = 0.07m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("00105c70-9652-470e-a623-22bab05b5f02"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3098),
                            Description = "GPT-4o 2024-05-13 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-2024-05-13",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("1f700432-5574-4608-948e-1af811711cb1"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3099),
                            Description = "GPT-4o 2024-08-06 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-2024-08-06",
                            PromptRate = 1.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("89eefafa-c974-44a4-948c-0811bec3ff64"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3099),
                            Description = "Moonshot v1 128k 文本模型",
                            Enable = true,
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-128k",
                            PromptRate = 5.06m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("ade0d6df-630d-400a-a79e-31b0925de7ad"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3100),
                            Description = "Moonshot v1 32k 文本模型",
                            Enable = true,
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-32k",
                            PromptRate = 2m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("c5742a17-71e7-4959-b960-85e1e26137c4"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3101),
                            Description = "Moonshot v1 8k 文本模型",
                            Enable = true,
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-8k",
                            PromptRate = 1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("738869bc-ed9e-4dd7-8a5e-e5922b25f090"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3101),
                            Description = "Text Babbage 001 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-babbage-001",
                            PromptRate = 0.25m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("c3f1a9b3-c3da-4517-a036-e80576116d4d"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3102),
                            Description = "Text Curie 001 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-curie-001",
                            PromptRate = 1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("686d4f27-bb2a-4d46-97e0-0d66bb7369b5"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3104),
                            Description = "Text Davinci 002 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-002",
                            PromptRate = 10m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("c6c7c467-3a83-4ca7-81b1-53cd49eff24b"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3105),
                            Description = "Text Davinci 003 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-003",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("8afe2211-c556-4f50-9e96-46aecee76d04"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3105),
                            Description = "Text Davinci Edit 001 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-edit-001",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("c731dd4e-f290-45be-bf2f-a276d55e6a58"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3106),
                            Description = "Text Embedding 3 Large 嵌入模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-3-large",
                            PromptRate = 0.13m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("1d0f59a8-e201-4b59-b730-30d9e7190b1e"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3107),
                            Description = "Text Embedding 3 Small 嵌入模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-3-small",
                            PromptRate = 0.1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("2179cf82-24be-4f47-80c3-4132d637ec1a"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3107),
                            Description = "Text Embedding Ada 002 嵌入模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-ada-002",
                            PromptRate = 0.1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("69ee54f0-5b3c-4a73-baa7-41747247e033"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3108),
                            Description = "TTS 1 语音合成模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1",
                            PromptRate = 7.5m,
                            QuotaType = 1,
                            Tags = "[\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("c50237ee-e1dc-45c6-b898-2e7ee8a45d16"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3109),
                            Description = "TTS 1 1106 语音合成模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-1106",
                            PromptRate = 7.5m,
                            QuotaType = 1,
                            Tags = "[\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("36232a2d-9b65-41ab-9838-f1cde410f282"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3111),
                            Description = "TTS 1 HD 语音合成模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-hd",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("0c06b145-11aa-4127-a19e-4c5df3b2f350"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3111),
                            Description = "TTS 1 HD 1106 语音合成模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-hd-1106",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("35c63d74-17f3-4506-9c25-03dff8371d4c"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3112),
                            Description = "Whisper 1 语音识别模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "whisper-1",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("5be5c17e-677d-454f-bad4-ed821f576ee8"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3113),
                            Description = "Hunyuan Lite 文本模型",
                            Enable = true,
                            Icon = "Hunyuan",
                            IsVersion2 = false,
                            Model = "hunyuan-lite",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("36606e19-8ab0-4877-83b1-a685a9d176f1"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3113),
                            Description = "通用文本模型",
                            Enable = true,
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "general",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("aebf6bf7-5eec-4705-9ab8-3ba42f390fcb"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3114),
                            Description = "通用文本模型 v3",
                            Enable = true,
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "generalv3",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("971ecd91-0225-43e3-90c9-ba4b5367f462"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3115),
                            Description = "通用文本模型 v3.5",
                            Enable = true,
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "generalv3.5",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("09afb809-dc02-4313-9ffe-f33339037a4a"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3115),
                            Description = "4.0 超级文本模型",
                            Enable = true,
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "4.0Ultra",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("dcd96138-c000-48c8-8c5d-e33e7f046270"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3118),
                            Description = "ChatGLM Lite 文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_lite",
                            PromptRate = 0.1429m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("483cd97c-9e06-4616-8df3-0bc82abeb1ac"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3118),
                            Description = "ChatGLM Pro 文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_pro",
                            PromptRate = 0.7143m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("0d104d2f-83c8-4b90-bf5e-7aeeb42f1784"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3119),
                            Description = "ChatGLM 标准文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_std",
                            PromptRate = 0.3572m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("ae3c4629-3fb0-4e10-8018-e807e05506d2"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3120),
                            Description = "ChatGLM Turbo 文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_turbo",
                            PromptRate = 0.3572m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("01055496-d99c-44a7-a943-532313bc38c6"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3120),
                            Description = "Claude 2 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("354ac804-8052-453e-b14f-4b47853d1c81"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3121),
                            Description = "Claude 2.0 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2.0",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("9a4bab1d-dc71-4ec8-ac15-e4b1be472015"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3122),
                            Description = "Claude 2.1 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2.1",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("2998aa4c-390a-4a53-8e34-69ec56b355d3"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3123),
                            Description = "Claude 3 Haiku 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-haiku",
                            PromptRate = 0.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("a5e1621c-b824-410c-af93-174d2f22e9f9"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3124),
                            Description = "Claude 3 Haiku 20240307 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-haiku-20240307",
                            PromptRate = 0.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("0b95d208-9d9a-4b2f-be45-d9f50826397d"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3125),
                            Description = "Claude 3.5 Sonnet 20240620 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-5-sonnet-20240620",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("ea63b44c-6d5c-4846-8f8b-b6201d21063f"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3126),
                            Description = "Claude 3 Sonnet 20240229 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-sonnet-20240229",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("09f68f3d-d9f6-47d7-808c-ebc1bc7cf41b"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3127),
                            Description = "Claude 3 Opus 20240229 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-opus-20240229",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("cf999306-7099-43ce-ab1f-a82f21571582"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3127),
                            Description = "Claude Instant 1 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-instant-1",
                            PromptRate = 0.815m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("9fc6554f-57fc-46c6-a217-4ba6c79ee227"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3128),
                            Description = "Claude Instant 1.2 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-instant-1.2",
                            PromptRate = 0.4m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("31c07c48-ae98-4950-9a00-e2cb8c4221c4"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3129),
                            Description = "DALL-E 2 图像生成模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "dall-e-2",
                            PromptRate = 8m,
                            QuotaType = 2,
                            Tags = "[\"\\u56FE\\u7247\"]"
                        },
                        new
                        {
                            Id = new Guid("f59ab4e5-6a4b-4e01-911c-ff94e8236b7b"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3129),
                            Description = "DALL-E 3 图像生成模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "dall-e-3",
                            PromptRate = 20m,
                            QuotaType = 2,
                            Tags = "[\"\\u56FE\\u7247\"]"
                        },
                        new
                        {
                            Id = new Guid("a4a4e243-3329-43e0-b6ca-8aced90cc600"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3131),
                            Description = "Embedding 2 嵌入模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "embedding-2",
                            PromptRate = 0.0355m,
                            QuotaMax = "",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]"
                        },
                        new
                        {
                            Id = new Guid("75b1af94-1abc-4cbe-8834-01979c21d6f4"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3132),
                            Description = "Embedding BERT 512 v1 嵌入模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "embedding-bert-512-v1",
                            PromptRate = 0.1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]"
                        },
                        new
                        {
                            Id = new Guid("05b0ce4c-5bfd-4da7-94db-b93a09380c60"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3133),
                            Description = "Embedding S1 v1 嵌入模型",
                            Enable = true,
                            IsVersion2 = false,
                            Model = "embedding_s1_v1",
                            PromptRate = 0.1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]"
                        },
                        new
                        {
                            Id = new Guid("f8f560cf-c288-4377-8865-847383c9643e"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3133),
                            Description = "GLM 3 Turbo 文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-3-turbo",
                            PromptRate = 0.355m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("53597617-f9e7-4b5b-a54a-3159f6d75cd0"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3134),
                            Description = "GLM 4 文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("edd3593d-8b67-4b9f-888e-7b5964f92162"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3135),
                            Description = "GLM 4 全部文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4-all",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("d42d8377-9401-4ea9-84fc-dbeeafa25679"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 295, DateTimeKind.Local).AddTicks(3135),
                            Description = "GLM 4v 文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4v",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("bigint");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Thor.Service.Domain.ProductPurchaseRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PurchaseTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("UserId");

                    b.ToTable("ProductPurchaseRecords");
                });

            modelBuilder.Entity("Thor.Service.Domain.RateLimitModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BlackList")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("Enable")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Limit")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Strategy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.Property<string>("WhiteList")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Model");

                    b.ToTable("RateLimitModels");
                });

            modelBuilder.Entity("Thor.Service.Domain.RedeemCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("longtext");

                    b.Property<bool>("Disabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Quota")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RedeemedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RedeemedUserId")
                        .HasColumnType("longtext");

                    b.Property<string>("RedeemedUserName")
                        .HasColumnType("longtext");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("RedeemCodes");
                });

            modelBuilder.Entity("Thor.Service.Domain.Setting", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Private")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Key");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Key = "Setting:GeneralSetting:RechargeAddress",
                            Description = "充值地址",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:ChatLink",
                            Description = "对话链接",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:VidolLink",
                            Description = "Vidol 链接",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:NewUserQuota",
                            Description = "新用户初始额度",
                            Private = true,
                            Value = "100000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:RequestQuota",
                            Description = "请求预扣额度",
                            Private = true,
                            Value = "2000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:InviteQuota",
                            Description = "邀请奖励额度",
                            Private = true,
                            Value = "100000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:EnableClearLog",
                            Description = "启用定时清理日志",
                            Private = true,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:IntervalDays",
                            Description = "间隔天数",
                            Private = true,
                            Value = "90"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:EnableAutoCheckChannel",
                            Description = "启用自动检测渠道策略",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:CheckInterval",
                            Description = "检测间隔 (分钟)",
                            Private = true,
                            Value = "60"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AutoDisableChannel",
                            Description = "自动禁用异常渠道",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayNotifyUrl",
                            Description = "支付宝支付回调地址",
                            Private = false,
                            Value = "https://您的服务器地址/"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayAppId",
                            Description = "支付宝应用APPID",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPrivateKey",
                            Description = "支付宝应用私钥",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPublicKey",
                            Description = "支付宝公钥",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayAppCertPath",
                            Description = "支付宝AppCertPath",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayRootCertPath",
                            Description = "支付宝AlipayRootCertPath",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPublicCertPath",
                            Description = "支付宝公钥证书路径",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:ServerAddress",
                            Description = "服务器地址",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableRegister",
                            Description = "启用账号注册",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableGithubLogin",
                            Description = "允许Github登录",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GithubClientId",
                            Description = "Github Client Id",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GithubClientSecret",
                            Description = "Github Client Secret",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableGiteeLogin",
                            Description = "允许Gitee登录",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeClientId",
                            Description = "Gitee Client Id",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeClientSecret",
                            Description = "Gitee Client Secret",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeRedirectUri",
                            Description = "Gitee redirect_uri",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EmailAddress",
                            Description = "邮箱地址",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EmailPassword",
                            Description = "邮箱密码",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:SmtpAddress",
                            Description = "SMTP地址",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableEmailRegister",
                            Description = "启用邮箱验证注册",
                            Private = false,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:WebTitle",
                            Description = "网站标题",
                            Private = false,
                            Value = "AIDtoNet API"
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:WebLogo",
                            Description = "网站Logo地址",
                            Private = false,
                            Value = "/logo.png"
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:IndexContent",
                            Description = "首页内容",
                            Private = false,
                            Value = "AI DotNet API 提供更强的兼容，将更多的AI平台接入到AI DotNet API中，让AI集成更加简单。"
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.Token", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("AccessedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("ExpiredTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("varchar(42)");

                    b.Property<string>("LimitModels")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("bigint");

                    b.Property<bool>("UnlimitedExpired")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("UnlimitedQuota")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("UsedQuota")
                        .HasColumnType("bigint");

                    b.Property<string>("WhiteIpList")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Key");

                    b.ToTable("Tokens");

                    b.HasData(
                        new
                        {
                            Id = "e1c39826-54d3-42ba-aebb-09b894ab3cb3",
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 293, DateTimeKind.Local).AddTicks(3846),
                            Creator = "c68dd459-d9e3-4955-93b7-337255d8e0f4",
                            Disabled = false,
                            IsDelete = false,
                            Key = "sk-Qg6M1YwLj9C2Irz6EJTrxybdRyqqm4hOBKYged",
                            LimitModels = "[]",
                            Name = "默认Token",
                            RemainQuota = 0L,
                            UnlimitedExpired = true,
                            UnlimitedQuota = true,
                            UsedQuota = 0L,
                            WhiteIpList = "[]"
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Avatar")
                        .HasColumnType("longtext");

                    b.Property<long>("ConsumeToken")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Creator")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Modifier")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("RequestCount")
                        .HasColumnType("bigint");

                    b.Property<long>("ResidualCredit")
                        .HasColumnType("bigint");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "c68dd459-d9e3-4955-93b7-337255d8e0f4",
                            ConsumeToken = 0L,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 9, 21, 293, DateTimeKind.Local).AddTicks(3432),
                            Email = "239573049@qq.com",
                            IsDelete = false,
                            IsDisabled = false,
                            Password = "da5828612309b64239dd2479ab6dec27",
                            PasswordHas = "66004663165d46f38baf659d91908f7f",
                            RequestCount = 0L,
                            ResidualCredit = 1000000000L,
                            Role = "admin",
                            UserName = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
