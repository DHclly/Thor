// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Thor.Provider;

#nullable disable

namespace Thor.Provider.DM.Thor
{
    [DbContext(typeof(DMThorContext))]
    [Migration("20241103175554_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Dm:ValueGenerationStrategy", DmValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            modelBuilder.Entity("Thor.Service.Domain.ChatChannel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<bool>("ControlAutomatically")
                        .HasColumnType("BIT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Creator")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<bool>("Disable")
                        .HasColumnType("BIT");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<string>("Models")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<string>("Modifier")
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<int>("Order")
                        .HasColumnType("INT");

                    b.Property<string>("Other")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<int>("Quota")
                        .HasColumnType("INT");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("BIGINT");

                    b.Property<long?>("ResponseTime")
                        .HasColumnType("BIGINT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Name");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("Thor.Service.Domain.ModelManager", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)");

                    b.Property<decimal?>("AudioOutputRate")
                        .HasColumnType("DECIMAL(29,4)");

                    b.Property<decimal?>("AudioPromptRate")
                        .HasColumnType("DECIMAL(29,4)");

                    b.Property<bool>("Available")
                        .HasColumnType("BIT");

                    b.Property<decimal?>("CompletionRate")
                        .HasColumnType("DECIMAL(29,4)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Creator")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<bool>("Enable")
                        .HasColumnType("BIT");

                    b.Property<string>("Icon")
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<bool>("IsVersion2")
                        .HasColumnType("BIT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Modifier")
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<decimal>("PromptRate")
                        .HasColumnType("DECIMAL(29,4)");

                    b.Property<string>("QuotaMax")
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<int>("QuotaType")
                        .HasColumnType("INT");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Model");

                    b.ToTable("ModelManagers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a54cd9eb-84dd-4284-9c81-c6075ce6f7f6"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9884),
                            Description = "GPT-3.5 Turbo 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("1d94896d-21aa-4ba2-9b93-eaf5a3060670"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9891),
                            Description = "GPT-3.5 Turbo 0125 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0125",
                            PromptRate = 0.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("99c46d34-3f24-4cb1-b41f-eec0db24c1eb"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9892),
                            Description = "GPT-3.5 Turbo 0301 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0301",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("9b0b4215-8769-463d-8d18-20a4d8781ced"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9893),
                            Description = "GPT-3.5 Turbo 0613 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-0613",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("e7bec2e7-ff7e-474e-89b3-87218f4156a6"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9903),
                            Description = "GPT-3.5 Turbo 1106 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-1106",
                            PromptRate = 0.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("4134f81f-21f7-4008-a4d1-62efa7f5b159"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9903),
                            Description = "GPT-3.5 Turbo 16k 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-16k",
                            PromptRate = 0.75m,
                            QuotaMax = "16K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("a3a763af-6ede-4f8d-bdb7-7efbe1550627"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9904),
                            Description = "GPT-3.5 Turbo 16k 0613 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-16k-0613",
                            PromptRate = 0.75m,
                            QuotaMax = "16K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("25ccba7f-2a3d-4548-a2aa-f05af313e76b"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9905),
                            Description = "GPT-3.5 Turbo Instruct 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-3.5-turbo-instruct",
                            PromptRate = 0.001m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("68464a6f-b753-4176-8b43-635b97cbacf3"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9906),
                            Description = "GPT-4 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("1339ff6c-3eda-40ec-ad7d-6a737e972642"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9906),
                            Description = "GPT-4 0125 预览文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0125-preview",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("9492c009-6684-4d49-90de-92109bd99f63"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9907),
                            Description = "GPT-4 0314 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0314",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("04f8cb16-5480-4adb-931a-13ed6ac42192"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9908),
                            Description = "GPT-4 0613 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-0613",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("dade9a30-f7b6-4f5a-b49b-fe1db14d73bd"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9911),
                            Description = "GPT-4 1106 预览文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-1106-preview",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("ec75c70b-0eda-4984-8cd3-3574d96146af"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9911),
                            Description = "GPT-4 1106 视觉预览模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-1106-vision-preview",
                            PromptRate = 10m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u89C6\\u89C9\",\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("e9a098fe-f478-4273-b892-88aaebc31f4a"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9912),
                            Description = "GPT-4 32k 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("1fd4ceb0-b295-4dcf-bb86-9d7a1c4cf620"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9913),
                            Description = "GPT-4 32k 0314 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k-0314",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("6dd73536-2232-40d1-906e-5d4df3c27368"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9914),
                            Description = "GPT-4 32k 0613 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-32k-0613",
                            PromptRate = 30m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("222644ef-484c-41c9-a19f-f852a35c7905"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9914),
                            Description = "GPT-4 全部文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-all",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u8054\\u7F51\"]"
                        },
                        new
                        {
                            Id = new Guid("da5d3fdb-fdae-4344-be73-09a85f7cf686"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9915),
                            Description = "GPT-4 Turbo 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("4592a4cd-62de-4435-84da-eb509d834f5f"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9916),
                            Description = "Gemini 1.5 Pro 文本模型",
                            Enable = true,
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-1.5-pro",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("61bf488f-849b-4da8-9b4e-1f0cf68f40ca"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9918),
                            Description = "Gemini Pro 文本模型",
                            Enable = true,
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-pro",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("9ec683b1-6952-44bf-b77d-f8b14f380711"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9919),
                            Description = "Gemini Pro 视觉模型",
                            Enable = true,
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-pro-vision",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]"
                        },
                        new
                        {
                            Id = new Guid("a5990f3a-b9e1-48bc-9032-c151efc2af6d"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9919),
                            Description = "Gemini 1.5 Flash 文本模型",
                            Enable = true,
                            Icon = "Google",
                            IsVersion2 = false,
                            Model = "gemini-1.5-flash",
                            PromptRate = 0.2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("d6d0b96f-f8fc-41a6-9c44-872809e19c4d"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9920),
                            Description = "GPT-4 Turbo 2024-04-09 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo-2024-04-09",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("68c043be-8d78-4aca-9f86-8fe266a7883f"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9921),
                            Description = "GPT-4 Turbo 预览文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-turbo-preview",
                            PromptRate = 5m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]"
                        },
                        new
                        {
                            Id = new Guid("7d51dadd-25be-4f51-8864-558dc012beb4"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9921),
                            Description = "GPT-4 视觉预览模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4-vision-preview",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\"]"
                        },
                        new
                        {
                            Id = new Guid("186de08c-8072-4df9-8e08-9310aadd12c5"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9922),
                            Description = "GPT-4o 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("e19e608b-2b79-4808-b70f-e82daa2fde33"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9923),
                            Description = "ChatGPT 4o 最新文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "chatgpt-4o-latest",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("792d050a-1233-4721-a0c3-2e40da65de3b"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9925),
                            Description = "GPT-4o Mini 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-mini",
                            PromptRate = 0.07m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("68136f5a-48ff-43b4-aa60-d0278bce387b"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9925),
                            Description = "GPT-4o Mini 2024-07-18 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-mini-2024-07-18",
                            PromptRate = 0.07m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("34f3e258-0813-46d3-b490-5bdf79458a09"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9926),
                            Description = "GPT-4o 2024-05-13 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-2024-05-13",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("84cafc64-08f4-4537-8c18-8d70587077a2"),
                            Available = true,
                            CompletionRate = 4m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9927),
                            Description = "GPT-4o 2024-08-06 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "gpt-4o-2024-08-06",
                            PromptRate = 1.25m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\",\"\\u89C6\\u89C9\",\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("6f80a5f4-827d-4dff-953a-d0b8b988a8ac"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9928),
                            Description = "Moonshot v1 128k 文本模型",
                            Enable = true,
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-128k",
                            PromptRate = 5.06m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("d31ddabb-7c1a-48fc-8892-bf0ef8b9c65e"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9928),
                            Description = "Moonshot v1 32k 文本模型",
                            Enable = true,
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-32k",
                            PromptRate = 2m,
                            QuotaMax = "32K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("4dab6775-dccd-4593-95ce-95139c30a3ef"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9929),
                            Description = "Moonshot v1 8k 文本模型",
                            Enable = true,
                            Icon = "Moonshot",
                            IsVersion2 = false,
                            Model = "moonshot-v1-8k",
                            PromptRate = 1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("1729981d-dfef-4bcd-9fab-1cac974bc9ad"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9930),
                            Description = "Text Babbage 001 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-babbage-001",
                            PromptRate = 0.25m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("23cdbcd3-a397-4ad4-a852-487318fa4d6b"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9932),
                            Description = "Text Curie 001 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-curie-001",
                            PromptRate = 1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("0fc4eab1-ad4a-49ca-973d-efd92a620a02"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9933),
                            Description = "Text Davinci 002 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-002",
                            PromptRate = 10m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("04af4942-af97-4c57-bd3d-a3ac7cc37df4"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9933),
                            Description = "Text Davinci 003 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-003",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("d0e05674-c8ec-4610-b749-7a368968f48c"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9934),
                            Description = "Text Davinci Edit 001 文本模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-davinci-edit-001",
                            PromptRate = 10m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("a7aef57d-c07b-466e-bc79-83ef58d60fd0"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9935),
                            Description = "Text Embedding 3 Large 嵌入模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-3-large",
                            PromptRate = 0.13m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("82038dd7-b1b8-499c-8a26-6d1bcca36e20"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9935),
                            Description = "Text Embedding 3 Small 嵌入模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-3-small",
                            PromptRate = 0.1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("0d390490-11cd-4162-b8c7-5dec47cf6424"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9936),
                            Description = "Text Embedding Ada 002 嵌入模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "text-embedding-ada-002",
                            PromptRate = 0.1m,
                            QuotaMax = "8K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("f0069473-2a60-4ff9-8bf5-c270c7ca13d6"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9937),
                            Description = "TTS 1 语音合成模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1",
                            PromptRate = 7.5m,
                            QuotaType = 1,
                            Tags = "[\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("54c8071c-9c14-4bbb-829d-6c03d08720e7"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9939),
                            Description = "TTS 1 1106 语音合成模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-1106",
                            PromptRate = 7.5m,
                            QuotaType = 1,
                            Tags = "[\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("b5b3476b-e9e6-4d4a-9a03-c131adc3a96e"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9939),
                            Description = "TTS 1 HD 语音合成模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-hd",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("98040a2c-7e19-48c7-9682-5afd2195423a"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9940),
                            Description = "TTS 1 HD 1106 语音合成模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "tts-1-hd-1106",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("2a5a6d4b-6f74-4d45-91f9-216eb3f3ba43"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9941),
                            Description = "Whisper 1 语音识别模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "whisper-1",
                            PromptRate = 15m,
                            QuotaType = 2,
                            Tags = "[\"\\u97F3\\u9891\"]"
                        },
                        new
                        {
                            Id = new Guid("9cec3c66-fb48-46ca-a6b0-747d1715a28a"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9942),
                            Description = "Hunyuan Lite 文本模型",
                            Enable = true,
                            Icon = "Hunyuan",
                            IsVersion2 = false,
                            Model = "hunyuan-lite",
                            PromptRate = 0.75m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("70aac551-96a8-4b22-851d-881ec96bec0d"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9942),
                            Description = "通用文本模型",
                            Enable = true,
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "general",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("96627c20-05a5-4868-b85f-854399e67bcd"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9943),
                            Description = "通用文本模型 v3",
                            Enable = true,
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "generalv3",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("6a924293-87e8-48d6-a031-73d7e3bcb310"),
                            Available = true,
                            CompletionRate = 2m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9944),
                            Description = "通用文本模型 v3.5",
                            Enable = true,
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "generalv3.5",
                            PromptRate = 2m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("7fc5cc13-708e-4b25-a905-2f93c103ef3e"),
                            Available = true,
                            CompletionRate = 3m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9946),
                            Description = "4.0 超级文本模型",
                            Enable = true,
                            Icon = "Spark",
                            IsVersion2 = false,
                            Model = "4.0Ultra",
                            PromptRate = 5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("3b7e09ec-c215-40f3-939a-28a72558c74a"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9946),
                            Description = "ChatGLM Lite 文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_lite",
                            PromptRate = 0.1429m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("e528e73c-56b6-4837-9423-c3e3dbc72c85"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9947),
                            Description = "ChatGLM Pro 文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_pro",
                            PromptRate = 0.7143m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("b199049c-c252-4786-af31-11c24e2434c6"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9948),
                            Description = "ChatGLM 标准文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_std",
                            PromptRate = 0.3572m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("e65c11cc-3f85-4d18-b40a-ff677529b4c8"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9948),
                            Description = "ChatGLM Turbo 文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "chatglm_turbo",
                            PromptRate = 0.3572m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("b2c1530d-d09e-4583-997c-d597a101a1d0"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9949),
                            Description = "Claude 2 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("9f6e940e-b444-47dc-8118-7934d0db1325"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9950),
                            Description = "Claude 2.0 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2.0",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("b599b4f2-ab14-49e1-9f3d-7797760e8b28"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9950),
                            Description = "Claude 2.1 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-2.1",
                            PromptRate = 7.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("a99408fa-c15b-4db2-ad2b-71cc23f744dd"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9953),
                            Description = "Claude 3 Haiku 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-haiku",
                            PromptRate = 0.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("f5d0d654-0c44-47ad-b190-6779e61346fd"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9953),
                            Description = "Claude 3 Haiku 20240307 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-haiku-20240307",
                            PromptRate = 0.5m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("434a3d31-430b-412e-8b33-d028a303761b"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9954),
                            Description = "Claude 3.5 Sonnet 20240620 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-5-sonnet-20240620",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("1400564e-ccb1-4144-b3e8-216cd8a7194d"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9955),
                            Description = "Claude 3 Sonnet 20240229 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-sonnet-20240229",
                            PromptRate = 3m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("830551b9-838d-4ccd-8be9-d4f9e5c2e75a"),
                            Available = true,
                            CompletionRate = 5m,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9955),
                            Description = "Claude 3 Opus 20240229 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-3-opus-20240229",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("f57939f6-b2b9-473b-a408-06ab05413d2b"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9956),
                            Description = "Claude Instant 1 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-instant-1",
                            PromptRate = 0.815m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("211be490-817b-42ce-9140-80667cdf846b"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9957),
                            Description = "Claude Instant 1.2 文本模型",
                            Enable = true,
                            Icon = "Claude",
                            IsVersion2 = false,
                            Model = "claude-instant-1.2",
                            PromptRate = 0.4m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("f3074b13-1767-4500-9a5d-82a92d4e9490"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9957),
                            Description = "DALL-E 2 图像生成模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "dall-e-2",
                            PromptRate = 8m,
                            QuotaType = 2,
                            Tags = "[\"\\u56FE\\u7247\"]"
                        },
                        new
                        {
                            Id = new Guid("10a2657d-ecc5-43a2-a69a-7138952d22ea"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9960),
                            Description = "DALL-E 3 图像生成模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "dall-e-3",
                            PromptRate = 20m,
                            QuotaType = 2,
                            Tags = "[\"\\u56FE\\u7247\"]"
                        },
                        new
                        {
                            Id = new Guid("bd225d75-04a0-4e13-bccf-2f75d3804206"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9960),
                            Description = "Embedding 2 嵌入模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "embedding-2",
                            PromptRate = 0.0355m,
                            QuotaMax = "",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]"
                        },
                        new
                        {
                            Id = new Guid("ab8d0511-d7d3-4fa6-983e-fbee9fd5550e"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9961),
                            Description = "Embedding BERT 512 v1 嵌入模型",
                            Enable = true,
                            Icon = "OpenAI",
                            IsVersion2 = false,
                            Model = "embedding-bert-512-v1",
                            PromptRate = 0.1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]"
                        },
                        new
                        {
                            Id = new Guid("527afa26-69a0-4298-b190-aad70db93eec"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9962),
                            Description = "Embedding S1 v1 嵌入模型",
                            Enable = true,
                            IsVersion2 = false,
                            Model = "embedding_s1_v1",
                            PromptRate = 0.1m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u5D4C\\u5165\\u6A21\\u578B\"]"
                        },
                        new
                        {
                            Id = new Guid("90fecc18-96e9-4df6-80d5-a2c7a94c6a5b"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9962),
                            Description = "GLM 3 Turbo 文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-3-turbo",
                            PromptRate = 0.355m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("3fab0578-423d-4135-98bd-089ed55869b7"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9963),
                            Description = "GLM 4 文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("461e4e85-f13f-4088-a533-50bbe7f3002a"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9964),
                            Description = "GLM 4 全部文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4-all",
                            PromptRate = 30m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        },
                        new
                        {
                            Id = new Guid("28881fe9-a9ef-4fee-aed0-5497641fecfb"),
                            Available = true,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 597, DateTimeKind.Local).AddTicks(9964),
                            Description = "GLM 4v 文本模型",
                            Enable = true,
                            Icon = "ChatGLM",
                            IsVersion2 = false,
                            Model = "glm-4v",
                            PromptRate = 15m,
                            QuotaMax = "128K",
                            QuotaType = 1,
                            Tags = "[\"\\u6587\\u672C\"]"
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Creator")
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<string>("Modifier")
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(29,4)");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("BIGINT");

                    b.Property<int>("Stock")
                        .HasColumnType("INT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Thor.Service.Domain.ProductPurchaseRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Creator")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<string>("Modifier")
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<DateTime>("PurchaseTime")
                        .HasColumnType("TIMESTAMP");

                    b.Property<int>("Quantity")
                        .HasColumnType("INT");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("BIGINT");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("UserId");

                    b.ToTable("ProductPurchaseRecords");
                });

            modelBuilder.Entity("Thor.Service.Domain.RateLimitModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("BlackList")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Creator")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<bool>("Enable")
                        .HasColumnType("BIT");

                    b.Property<int>("Limit")
                        .HasColumnType("INT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Modifier")
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<string>("Strategy")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP");

                    b.Property<int>("Value")
                        .HasColumnType("INT");

                    b.Property<string>("WhiteList")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Model");

                    b.ToTable("RateLimitModels");
                });

            modelBuilder.Entity("Thor.Service.Domain.RedeemCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Creator")
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("BIT");

                    b.Property<string>("Modifier")
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<long>("Quota")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime?>("RedeemedTime")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("RedeemedUserId")
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<string>("RedeemedUserName")
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<int>("State")
                        .HasColumnType("INT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("RedeemCodes");
                });

            modelBuilder.Entity("Thor.Service.Domain.Setting", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<bool>("Private")
                        .HasColumnType("BIT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.HasKey("Key");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Key = "Setting:GeneralSetting:RechargeAddress",
                            Description = "充值地址",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:ChatLink",
                            Description = "对话链接",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:VidolLink",
                            Description = "Vidol 链接",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:NewUserQuota",
                            Description = "新用户初始额度",
                            Private = true,
                            Value = "100000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:RequestQuota",
                            Description = "请求预扣额度",
                            Private = true,
                            Value = "2000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:InviteQuota",
                            Description = "邀请奖励额度",
                            Private = true,
                            Value = "100000"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:EnableClearLog",
                            Description = "启用定时清理日志",
                            Private = true,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:IntervalDays",
                            Description = "间隔天数",
                            Private = true,
                            Value = "90"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:EnableAutoCheckChannel",
                            Description = "启用自动检测渠道策略",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:CheckInterval",
                            Description = "检测间隔 (分钟)",
                            Private = true,
                            Value = "60"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AutoDisableChannel",
                            Description = "自动禁用异常渠道",
                            Private = true,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayNotifyUrl",
                            Description = "支付宝支付回调地址",
                            Private = false,
                            Value = "https://您的服务器地址/"
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayAppId",
                            Description = "支付宝应用APPID",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPrivateKey",
                            Description = "支付宝应用私钥",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPublicKey",
                            Description = "支付宝公钥",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayAppCertPath",
                            Description = "支付宝AppCertPath",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayRootCertPath",
                            Description = "支付宝AlipayRootCertPath",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:GeneralSetting:AlipayPublicCertPath",
                            Description = "支付宝公钥证书路径",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:ServerAddress",
                            Description = "服务器地址",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableRegister",
                            Description = "启用账号注册",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableGithubLogin",
                            Description = "允许Github登录",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GithubClientId",
                            Description = "Github Client Id",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GithubClientSecret",
                            Description = "Github Client Secret",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableGiteeLogin",
                            Description = "允许Gitee登录",
                            Private = false,
                            Value = "true"
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeClientId",
                            Description = "Gitee Client Id",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeClientSecret",
                            Description = "Gitee Client Secret",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:GiteeRedirectUri",
                            Description = "Gitee redirect_uri",
                            Private = false,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EmailAddress",
                            Description = "邮箱地址",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EmailPassword",
                            Description = "邮箱密码",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:SmtpAddress",
                            Description = "SMTP地址",
                            Private = true,
                            Value = ""
                        },
                        new
                        {
                            Key = "Setting:SystemSetting:EnableEmailRegister",
                            Description = "启用邮箱验证注册",
                            Private = false,
                            Value = "false"
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:WebTitle",
                            Description = "网站标题",
                            Private = false,
                            Value = "AIDtoNet API"
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:WebLogo",
                            Description = "网站Logo地址",
                            Private = false,
                            Value = "/logo.png"
                        },
                        new
                        {
                            Key = "Setting:OtherSetting:IndexContent",
                            Description = "首页内容",
                            Private = false,
                            Value = "AI DotNet API 提供更强的兼容，将更多的AI平台接入到AI DotNet API中，让AI集成更加简单。"
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.Token", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime?>("AccessedTime")
                        .HasColumnType("TIMESTAMP");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Creator")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TIMESTAMP");

                    b.Property<bool>("Disabled")
                        .HasColumnType("BIT");

                    b.Property<DateTime?>("ExpiredTime")
                        .HasColumnType("TIMESTAMP");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("BIT");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("NVARCHAR2(42)");

                    b.Property<string>("LimitModels")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<string>("Modifier")
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<long>("RemainQuota")
                        .HasColumnType("BIGINT");

                    b.Property<bool>("UnlimitedExpired")
                        .HasColumnType("BIT");

                    b.Property<bool>("UnlimitedQuota")
                        .HasColumnType("BIT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP");

                    b.Property<long>("UsedQuota")
                        .HasColumnType("BIGINT");

                    b.Property<string>("WhiteIpList")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.HasKey("Id");

                    b.HasIndex("Creator");

                    b.HasIndex("Key");

                    b.ToTable("Tokens");

                    b.HasData(
                        new
                        {
                            Id = "2d42debc-c343-49e7-bca7-8a4a5fbdabcd",
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 595, DateTimeKind.Local).AddTicks(4615),
                            Creator = "75208f65-a6e0-491d-91b4-a9ecc180a36f",
                            Disabled = false,
                            IsDelete = false,
                            Key = "sk-ELFtn4XLhtFY99QPwLhMnOOLCEUfvAkFXPTjbe",
                            LimitModels = "[]",
                            Name = "默认Token",
                            RemainQuota = 0L,
                            UnlimitedExpired = true,
                            UnlimitedQuota = true,
                            UsedQuota = 0L,
                            WhiteIpList = "[]"
                        });
                });

            modelBuilder.Entity("Thor.Service.Domain.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Avatar")
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<long>("ConsumeToken")
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Creator")
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("BIT");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("BIT");

                    b.Property<string>("Modifier")
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<string>("PasswordHas")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<long>("RequestCount")
                        .HasColumnType("BIGINT");

                    b.Property<long>("ResidualCredit")
                        .HasColumnType("BIGINT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(32767)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "75208f65-a6e0-491d-91b4-a9ecc180a36f",
                            ConsumeToken = 0L,
                            CreatedAt = new DateTime(2024, 11, 4, 1, 55, 54, 595, DateTimeKind.Local).AddTicks(4171),
                            Email = "239573049@qq.com",
                            IsDelete = false,
                            IsDisabled = false,
                            Password = "d8c46cab2a38f1656625e33498eca25e",
                            PasswordHas = "ee679168408e49eb9ed1259db5a1a422",
                            RequestCount = 0L,
                            ResidualCredit = 1000000000L,
                            Role = "admin",
                            UserName = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
